name: Docker Smoke Tests

on:
  workflow_dispatch:
  workflow_call:

permissions:
  actions: write
  checks: write
  contents: write
  pull-requests: write
  packages: write

env:
  BRANCH_NAME: ${{ github.event.pull_request.head_ref || github.event.pull_request.head.ref_name || github.head_ref || github.ref_name }}
  NODE_VERSION: 20
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  smoke-test-puppeteer:
    name: üí® Puppeteer
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set Name and Tag Vars
        env:
          name: "${{ env.BRANCH_NAME }}"
        run: |
          echo "IMAGE_NAME_LC=${IMAGE_NAME,,}" >>${GITHUB_ENV}
          echo "TAG=${name/\//-}" >> $GITHUB_ENV
          echo "PV=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚¨¢ Setup Node & Cache
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: ‚Üß Install
        run: npm ci

      - name: Pull Image
        run: |
          docker pull $REGISTRY/$IMAGE_NAME_LC:$TAG

      - name: "ìãè Run `backstop test --confg=backstop_features` in Docker"
        continue-on-error: true
        run: |
          cd test/configs/ && docker run --rm -t --mount type=bind,source="$(pwd)",target=/src $REGISTRY/$IMAGE_NAME_LC:$TAG test --config=backstop_features

      - name: "Validate Puppeteer Test Results"
        run: |
          diff -q <(jq -S ". | del(.tests[].pair.test, .tests[].pair.testLog, .tests[].pair.diffImage, .tests[].pair.diff.analysisTime, .tests[].pair.diff.misMatchPercentage, .tests[].pair.diff.rawMisMatchPercentage)" test/__fixtures__/smoke-test-docker.json) \
            <(jq -S ". | del(.tests[].pair.test, .tests[].pair.testLog, .tests[].pair.diffImage, .tests[].pair.diff.analysisTime, .tests[].pair.diff.misMatchPercentage, .tests[].pair.diff.rawMisMatchPercentage)" test/configs/backstop_data/bitmaps_test/**/report.json) 1>/dev/null
          if [[ $? == "0" ]]; then
            exit 0
          else
            exit 1
          fi

  smoke-test-playwright:
    name: üí® Playwright
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: Set Name and Tag Vars
        env:
          name: "${{ env.BRANCH_NAME }}"
        run: |
          echo "IMAGE_NAME_LC=${IMAGE_NAME,,}" >>${GITHUB_ENV}
          echo "TAG=${name/\//-}" >> $GITHUB_ENV
          echo "PV=$(cat package.json | jq -r '.version')" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚¨¢ Setup Node & Cache
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: ‚Üß Install
        run: npm ci

      - name: Pull Image
        run: |
          docker pull $REGISTRY/$IMAGE_NAME_LC:$TAG

      - name: "üé≠ Run `backstop test --confg=backstop_features_pw` in Docker"
        continue-on-error: true
        run: |
          cd test/configs/ && docker run --rm -t --entrypoint='' --mount type=bind,source="$(pwd)",target=/src $REGISTRY/$IMAGE_NAME_LC:$TAG sh -c "chmod -R 777 /root && chmod -R 777 /opt/pw-browsers && npm --verbose i -D playwright && npx --verbose --foreground-scripts --yes playwright@$PLAYWRIGHT_VERSION install && backstop test --config=backstop_features_pw"

      - name: "Validate Playwright Test Results"
        run: |
          diff -q <(jq -S ". | del(.tests[].pair.test, .tests[].pair.testLog, .tests[].pair.diffImage, .tests[].pair.diff.analysisTime, .tests[].pair.diff.misMatchPercentage, .tests[].pair.diff.rawMisMatchPercentage)" test/__fixtures__/smoke-test-playwright-docker.json) \
            <(jq -S ". | del(.tests[].pair.test, .tests[].pair.testLog, .tests[].pair.diffImage, .tests[].pair.diff.analysisTime, .tests[].pair.diff.misMatchPercentage, .tests[].pair.diff.rawMisMatchPercentage)" test/configs/backstop_data/bitmaps_test/**/report.json) 1>/dev/null
          if [[ $? == "0" ]]; then
            exit 0
          else
            exit 1
          fi
