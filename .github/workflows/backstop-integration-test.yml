name: Backstop Integration Test Check

on:
  workflow_dispatch:
  workflow_call:

permissions:
  actions: write
  contents: write
  pull-requests: write

env:
  NODE_VERSION: 20

jobs:
  integration:
    name: 🧩 Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          ref: ${{ github.event.pull_request.head.sha || github.ref }}

      - name: ⬢ Setup Node & Cache
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: package-lock.json

      - name: ↧ Install
        run: npm ci

      - name: "𓋏 Run `npm run integration-test`"
        run: |
          npm run integration-test

      - name: "Validate Integration Test Results"
        id: validate
        continue-on-error: true
        run: |
          set +e

          echo "REFERENCE_REPORT=$(ls -ltrd integrationTestDir/backstop_data/bitmaps_test/*/ | grep '^d' | head -n 1 | awk '{print $NF}')" >> $GITHUB_ENV
          echo "TEST_REPORT=$(ls -ltd integrationTestDir/backstop_data/bitmaps_test/*/ | grep '^d' | head -n 1 | awk '{print $NF}')" >> $GITHUB_ENV

          REF_RESULT=$(diff <(jq 'walk(if type == "object" then with_entries(.value |= if type == "object" or type == "array" then . else "" end) else . end) | del(.tests[].pair.diff)' test/__fixtures__/integration-test/reference-report.json) <(jq 'walk(if type == "object" then with_entries(.value |= if type == "object" or type == "array" then . else "" end) else . end) | del(.tests[].pair.diff)' ${REFERENCE_REPORT}report.json))

          if [[ $REF_RESULT == "" ]] && [[ $TEST_RESULT == "" ]]; then
            echo "# ✅ Integration Shapes Match" >> $GITHUB_STEP_SUMMARY
          else
            echo "# ❎ Integration Shapes Differ:" >> $GITHUB_STEP_SUMMARY
            if [[ $REF_RESULT != "" ]]; then
              echo "## Bitmaps Reference Report" >> $GITHUB_STEP_SUMMARY
              echo '```diff' >> $GITHUB_STEP_SUMMARY
              echo "${REF_RESULT}" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            elif [[ $TEST_RESULT != "" ]]; then
              echo "## Bitmaps Test Test Report" >> $GITHUB_STEP_SUMMARY
              echo '```diff' >> $GITHUB_STEP_SUMMARY
              echo "${TEST_RESULT}" >> $GITHUB_STEP_SUMMARY
              echo '```' >> $GITHUB_STEP_SUMMARY
            fi
          fi

      - name: "Validate Integration Test Results"
        id: diff
        continue-on-error: true
        run: |
          set +e
          FULL_REF_DIFF=$(diff <(jq -S '.tests[]' test/__fixtures__/integration-test/reference-report.json) <(jq -S '.tests[]' ${REFERENCE_REPORT}report.json))
          FULL_TEST_DIFF=$(diff <(jq -S '.tests[]' test/__fixtures__/integration-test/test-report.json) <(jq -S '.tests[]' ${TEST_REPORT}report.json))
          echo "# Unfiltered Diffs" >> $GITHUB_STEP_SUMMARY

          echo "## Reference Report Diff" >> $GITHUB_STEP_SUMMARY
          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>Show</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          echo "${FULL_REF_DIFF}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

          echo "## Test Report Diff" >> $GITHUB_STEP_SUMMARY
          echo "<details>" >> $GITHUB_STEP_SUMMARY
          echo "<summary>Show</summary>" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```diff' >> $GITHUB_STEP_SUMMARY
          echo "${FULL_TEST_DIFF}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

      - name: "Test Results Validation Outcome"
        run: |
          if [[ $RESULT == "" ]]; then
            exit 0
          else
            exit 1
          fi
